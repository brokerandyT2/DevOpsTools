// 3SC Conduit: Java Annotation DSL
// Version: 1.0.0
// Auto-generated by 3SC DataLink. Do not modify.
package com.threese.conduit.annotations;

import java.lang.annotation.*;

public class Dsl {
    public enum TriggerType { HTTP, AZURE_SERVICE_BUS_QUEUE, AWS_SQS_QUEUE, KAFKA_TOPIC, CRON, SCAFFOLD }
    public enum LoggingAction { ON_INBOUND, ON_OUTBOUND, ON_ERROR }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.TYPE)
    public @interface DataConsumer {
        String serviceName() default "";
    }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    @Repeatable(Triggers.class)
    public @interface Trigger {
        TriggerType type();
        String name() default "";
        String method() default "POST";
    }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    public @interface Triggers {
        Trigger[] value();
    }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    @Repeatable(RequiresList.class)
    public @interface Requires {
        Class<?> handler();
        String method();
    }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    public @interface RequiresList {
        Requires[] value();
    }
    
    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    @Repeatable(RequiresLoggers.class)
    public @interface RequiresLogger {
        Class<?> handler();
        LoggingAction action();
    }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    public @interface RequiresLoggers {
        RequiresLogger[] value();
    }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    @Repeatable(RequiresResultsLoggers.class)
    public @interface RequiresResultsLogger {
        Class<?> handler();
        String method();
        String variable();
    }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    public @interface RequiresResultsLoggers {
        RequiresResultsLogger[] value();
    }

    @Retention(RetentionPolicy.CLASS)
    @Target(ElementType.METHOD)
    public @interface UseTemplate {
        String templatePath();
    }
}