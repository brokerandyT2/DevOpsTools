// 3SC Conduit: Go Comment Directive DSL
// Version: 1.0.0
// Auto-generated by 3SC DataLink. Do not modify.
// This file serves as documentation for the comment-based directives used by Conduit.

package datalink_dsl

// TriggerType defines the event source that will invoke a method.
// Supported values: Http, AzureServiceBusQueue, AwsSqsQueue, KafkaTopic, Cron, Scaffold
type TriggerType string

// LoggingAction defines the logging action to be performed.
// Supported values: OnInbound, OnOutbound, OnError
type LoggingAction string

// @DataConsumer marks a struct as a service container.
// Example:
//   // @DataConsumer serviceName="order-processor"
//   type OrderProcessor struct { ... }
const DataConsumer = `// @DataConsumer serviceName="my-service"`

// @Trigger marks a method as an event handler.
// Example:
//   // @Trigger type="AwsSqsQueue" name="new-orders"
//   func (p *OrderProcessor) HandleNewOrder(order dtos.OrderEvent) error { ... }
const Trigger = `// @Trigger type="Http" name="/my-endpoint"`

// @Requires defines a pre-processing gate (e.g., for authentication).
// Example:
//   // @Requires handler="hooks.ValidateRequest"
//   func (s *AdminService) RunAdminJob(payload dtos.AdminJobPayload) error { ... }
const Requires = `// @Requires handler="mypackage.MyAuthFunction"`

// @RequiresLogger injects an observability hook.
// Example:
//   // @RequiresLogger handler="loggers.LogEvent" action="OnInbound"
//   func (p *OrderProcessor) HandleNewOrder(order dtos.OrderEvent) error { ... }
const RequiresLogger = `// @RequiresLogger handler="mypackage.MyLoggerFunction" action="OnInbound"`

// @RequiresResultsLogger injects trace logging.
// Example:
//   // @RequiresResultsLogger handler="loggers.LogEvent" variable="enrichedData"
//   func (w *Workflow) Start(payload dtos.Payload) error { ... }
const RequiresResultsLogger = `// @RequiresResultsLogger handler="mypackage.MyLoggerFunction" variable="myVariable"`

// @UseTemplate activates template-driven generation.
// Example:
//   // @Trigger type="Scaffold"
//   // @UseTemplate templatePath="./templates/my-custom-handler"
//   func (h *CustomHandler) GenerateFromTemplate(payload dtos.Payload) { ... }
const UseTemplate = `// @UseTemplate templatePath="./templates/my-template"`